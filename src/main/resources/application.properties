spring.application.name=backend
server.port=8080

# ✅ Conexión a MySQL en Render (usando variables de entorno)
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ✅ Configuración JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# ✅ Cloudinary
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# ✅ Google OAuth
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.scope=email,profile

# ✅ JWT
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration-ms=${JWT_EXPIRATION_MS}

# ✅ Upload
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ✅ Logging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.com.usuario.backend.security=DEBUG

# ✅ Mostrar errores detallados
server.error.include-stacktrace=always
app.frontend.url=${FRONTEND_URL:http://localhost:5173}
app.frontend.login.path=/
app.frontend.home.path=/home
app.frontend.error.path=/error

# Backend URLs  
app.backend.url=${BACKEND_URL:http://localhost:8080}

# CORS
cors.allowed.origins=${CORS_ORIGINS:http://localhost:5173,http://localhost:3000}